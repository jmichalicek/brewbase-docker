FROM debian:jessie-backports
# could also use the docker-elixir base image - it is
# based on erlang:19 which is also based on debian jessie
MAINTAINER Justin Michalicek <jmichalicek@gmail.com>
EXPOSE 4000

RUN apt-get update && apt-get install -y --force-yes \
    autoconf \
    bind9-host \
    bison \
    build-essential \
    coreutils \
    curl \
    daemontools \
    dnsutils \
    git \
    inotify-tools \
    libbz2-dev \
    libcurl4-openssl-dev \
    libev-dev \
    libevent-dev \
    libffi-dev \
    libglib2.0-dev \
    libjpeg-dev \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    libuv-dev \
    libxml2-dev \
    libxslt-dev \
    python \
    sudo \
    tar \
    telnet \
    tmux \
    vim \
    wget \
    zip \
    zlib1g-dev \
    zsh \
    && apt-get autoremove && apt-get clean

RUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' >> /etc/apt/sources.list.d/pgdg.list
RUN apt-get install wget ca-certificates && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
RUN apt-get update && apt-get install -y --force-yes \
    postgresql-client-9.6 libpq-dev libpq5 \
    && apt-get autoremove && apt-get clean

RUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
RUN apt-get update && apt-get install -y --force-yes esl-erlang elixir && apt-get autoremove && apt-get clean

RUN useradd -ms /bin/zsh developer && echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
# set dev db to trust all local users
# RUN sed -i -e 's#^host\s\+all\s\+all\s\+127.0.0.1\/32\s\+md5$#host    all all 127.0.0.1/32    trust#' /etc/postgresql/9.4/main/pg_hba.conf

USER developer
ENV HOME /home/developer
WORKDIR /home/developer
RUN touch ~/.zshrc
ENV POSTGRES_DB=''
ENV POSTGRES_USER=''
ENV POSTGRES_PASSWORD=''
ENV DB_HOST=''
ENV SMTP_HOST='fake'
ENV SMTP_PORT='1234'
ENV SMTP_USERNAME='fake'
ENV SMTP_PASSWORD='fake'

# generate with mix phoenix.gen.secret
ENV SECRET_KEY_BASE=''
# generate a key with
# JOSE.JWS.generate_key(%{"alg" => "HS512"}) |> JOSE.JWK.to_map |> elem(1)
# or
# JOSE.JWK.generate_key({:oct, 16}) |> JOSE.JWK.to_map |> elem(1)
ENV GUARDIAN_SECRET_KEY=''

# for now do not make postgres data permanent
# VOLUME ["/var/lib/postgresql/9.4/main"]
# Mount the local code here
VOLUME ["$HOME/worrywort/"]

# ENV DJANGO_SETTINGS_MODULE bash_shell_net.settings.local
# RUN echo export PATH="$PATH:/path/to/elixir/bin" >> $HOME/.zshrc
CMD /bin/zsh
